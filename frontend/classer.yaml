openapi: 3.0.1
servers:
  - url: '{scheme}://localhost:8181'
    variables:
      scheme:
        description: 'The Classer API is accessible via https and http'
        enum:
          - 'https'
          - 'http'
        default: 'https'
info:
  description: >-
    Classer is used for creating and testing text classification models
  version: 1.0.0
  title: Classer API
  contact:
    name: Classer Dev team
    url: 'https://developer.classer.io'
    email: developer@classer.io
tags:
  - name: training
    description: Labeled training sets
  - name: models
    description: Raw untrained models
  - name: corpora
    description: Unlabeled corpora of examples
  - name: implementations
    description: Models trained on a training
paths:
  /training/list:
    get:
      tags:
        - training
      operationId: list-training
      summary: List available training sets
      responses:
        '200':
          description: Returns a list of training sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trainingList'
              example:
                [
                  "first",
                  "second"
                ]
  /training/get:
    get:
      tags:
        - training
      operationId: get-training
      summary: Get the full contents of a single training set
      parameters:
        name: trainingName
        in: query
        description: Name of the training set to retrieve
        required: true
        type: string
      responses:
        '200':
          description: Returns the full contents of a training set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trainingContents'
              example:
                [
                  {
                    "text": "The movie was absolutely terrible!",
                    "label": "neg"
                  },
                  {
                    "text": "The food and service were both great!",
                    "label": "pos"
                  }
                ]
  # /{dataset}/{version}/fields:
  #   get:
  #     tags:
  #       - metadata
  #     summary: >-
  #       Provides the general information about the API and the list of fields
  #       that can be used to query the dataset.
  #     description: >-
  #       This GET API returns the list of all the searchable field names that are
  #       in the oa_citations. Please see the 'fields' attribute which returns an
  #       array of field names. Each field or a combination of fields can be
  #       searched using the syntax options shown below.
  #     operationId: list-searchable-fields
  #     parameters:
  #       - name: dataset
  #         in: path
  #         description: 'Name of the dataset.'
  #         required: true
  #         example: "oa_citations"
  #         schema:
  #           type: string
  #       - name: version
  #         in: path
  #         description: Version of the dataset.
  #         required: true
  #         example: "v1"
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: >-
  #           The dataset API for the given version is found and it is accessible
  #           to consume.
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #       '404':
  #         description: >-
  #           The combination of dataset name and version is not found in the
  #           system or it is not published yet to be consumed by public.
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  # /{dataset}/{version}/records:
  #   post:
  #     tags:
  #       - search
  #     summary: >-
  #       Provides search capability for the data set with the given search
  #       criteria.
  #     description: >-
  #       This API is based on Solr/Lucense Search. The data is indexed using
  #       SOLR. This GET API returns the list of all the searchable field names
  #       that are in the Solr Index. Please see the 'fields' attribute which
  #       returns an array of field names. Each field or a combination of fields
  #       can be searched using the Solr/Lucene Syntax. Please refer
  #       https://lucene.apache.org/core/3_6_2/queryparsersyntax.html#Overview for
  #       the query syntax. List of field names that are searchable can be
  #       determined using above GET api.
  #     operationId: perform-search
  #     parameters:
  #       - name: version
  #         in: path
  #         description: Version of the dataset.
  #         required: true
  #         schema:
  #           type: string
  #           default: v1
  #       - name: dataset
  #         in: path
  #         description: 'Name of the dataset. In this case, the default value is oa_citations'
  #         required: true
  #         schema:
  #           type: string
  #           default: oa_citations
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 type: object
  #                 additionalProperties:
  #                   type: object
  #       '404':
  #         description: No matching record found for the given criteria.
  #     requestBody:
  #       content:
  #         application/x-www-form-urlencoded:
  #           schema:
  #             type: object
  #             properties:
  #               criteria:
  #                 description: >-
  #                   Uses Lucene Query Syntax in the format of
  #                   propertyName:value, propertyName:[num1 TO num2] and date
  #                   range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the
  #                   response please see the 'docs' element which has the list of
  #                   record objects. Each record structure would consist of all
  #                   the fields and their corresponding values.
  #                 type: string
  #                 default: '*:*'
  #               start:
  #                 description: Starting record number. Default value is 0.
  #                 type: integer
  #                 default: 0
  #               rows:
  #                 description: >-
  #                   Specify number of rows to be returned. If you run the search
  #                   with default values, in the response you will see 'numFound'
  #                   attribute which will tell the number of records available in
  #                   the dataset.
  #                 type: integer
  #                 default: 100
  #             required:
  #               - criteria
components:
  schemas:
    trainingList:
      type: array
      items:
        type: string
        description: Name of an available training
    trainingContents:
      type: array
      items:
        type: object
        description: Single example in a training set
        properties:
          text:
            type: string
            description: The text contents of the example
          label:
            type: string
            description: The label associated with the example

    # dataSetList:
    #   type: object
    #   properties:
    #     total:
    #       type: integer
    #     apis:
    #       type: array
    #       items:
    #         type: object
    #         properties:
    #           apiKey:
    #             type: string
    #             description: To be used as a dataset parameter value
    #           apiVersionNumber:
    #             type: string
    #             description: To be used as a version parameter value
    #           apiUrl:
    #             type: string
    #             format: uriref
    #             description: "The URL describing the dataset's fields"
    #           apiDocumentationUrl:
    #             type: string
    #             format: uriref
    #             description: A URL to the API console for each API
